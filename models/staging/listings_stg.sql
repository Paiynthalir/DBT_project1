{{
        config(
          strategy='timestamp',
          unique_key='listing_id',
          updated_at='inserted_datetime'
        )
}}

with

source  as (

    select * from "postgres"."raw"."listings"

),

listings_stg as (
    SELECT
        LISTING_ID,
        SCRAPE_ID,
        to_date(SCRAPED_DATE, 'YYYY-MM-DD') as SCRAPED_DATE,
        HOST_ID,
        ACCOMMODATES,
        PRICE,
        HAS_AVAILABILITY,
        AVAILABILITY_30,
        NUMBER_OF_REVIEWS,
        -- Replace missing values in each column with 0 if they are 'NaN'
        CASE WHEN REVIEW_SCORES_RATING = 'NaN' THEN 0 ELSE REVIEW_SCORES_RATING END AS REVIEW_SCORES_RATING,
        CASE WHEN REVIEW_SCORES_ACCURACY = 'NaN' THEN 0 ELSE REVIEW_SCORES_ACCURACY END AS REVIEW_SCORES_ACCURACY,
        CASE WHEN REVIEW_SCORES_CLEANLINESS = 'NaN' THEN 0 ELSE REVIEW_SCORES_CLEANLINESS END AS REVIEW_SCORES_CLEANLINESS,
        CASE WHEN REVIEW_SCORES_CHECKIN = 'NaN' THEN 0 ELSE REVIEW_SCORES_CHECKIN  END AS REVIEW_SCORES_CHECKIN,
        CASE WHEN REVIEW_SCORES_COMMUNICATION = 'NaN' THEN 0 ELSE REVIEW_SCORES_COMMUNICATION END AS REVIEW_SCORES_COMMUNICATION,
        CASE WHEN REVIEW_SCORES_VALUE = 'NaN' THEN 0 ELSE CAST(REVIEW_SCORES_VALUE AS NUMERIC) END AS REVIEW_SCORES_VALUE,
        inserted_datetime
    FROM source
)

select * from listings_stg
Where LISTING_ID IS NOT NULL and SCRAPE_ID IS NOT NULL and SCRAPED_DATE IS NOT NULL and HOST_ID IS NOT NULL